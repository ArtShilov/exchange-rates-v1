{"version":3,"sources":["components/Table/index.js","components/Table/Table.jsx","components/Loader/index.js","components/Loader/Loader.jsx","components/SelectInput/index.js","components/SelectInput/SelectInput.jsx","components/Graph/optionForGraph.js","components/Graph/index.js","components/Graph/Graph.jsx","components/ManualLoading/index.js","components/ManualLoading/ManualLoading.jsx","components/App/App.jsx","components/App/index.js","index.js"],"names":["Table","valCourse","useState","pageSize","courseArray","setCourseArray","currentValutes","setCurrentValutes","totalValuteCount","useMemo","Valute","length","currentPage","setCurrentPage","sortBy","setSortBy","name","sort","tableHead","setTableHead","pageCount","Array","Math","ceil","keys","map","n","i","currentValutesMemo","useCallback","calcElement","slice","useEffect","sortElementName","sortElement","filter","e","newSort","a","b","sortColumn","className","colSpan","_attributes","Date","obj","onClick","newTableHeadState","handleSortTable","key","Name","CharCode","NumCode","Nominal","Value","ID","random","Loader","type","color","width","height","SelectInput","state","selectedOption","handleChange","setState","props","selectHandler","this","options","isMulti","closeMenuOnSelect","defaultValue","placeholder","value","onChange","React","Component","title","text","xAxis","legend","layout","align","verticalAlign","series","responsive","rules","condition","maxWidth","chartOptions","chart","Graph","dataToSelectInput","dateFrom","setDateFrom","dateTo","setDateTo","valuteData","setValuteData","jsonDataToDownload","setJsonDataToDownload","HighchartsReactOptions","setHighchartsReactOptions","today","toISOString","split","graphRequestHandler","preventDefault","axios","get","responce","console","log","data","JSON","parse","dateArray","valueArray","periodDate","to","from","newOptions","label","categories","onSubmit","min","max","target","required","href","encodeURIComponent","stringify","download","highcharts","Highcharts","style","ManualLoading","dataIsLoad","setDataIsLoad","dataIsLoadIng","setDataIsLoading","result","timeout","setTimeout","clearTimeout","App","setValCourse","valCourseFilter","setValCourseFilter","setDataToSelectInput","dateForTableFilter","setDateForTableFilter","noDateForTable","setNoDateForTable","selectDataForTableFilter","setSelectDataForTableFilter","filterTableHandler","elements","newValCourse","element","some","chooseElements","fetchData","dateNow","formatDate","nameList","ValCurs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a16c4ff2.chunk.js","sourcesContent":["import Table from './Table'\n\nexport default Table\n","import React, { useEffect, useCallback } from \"react\";\nimport \"./Table.css\";\nimport { useState, useMemo } from \"react\";\n\nexport default function Table({ valCourse}) {\n  \n  const [pageSize] = useState(10);\n  const [courseArray, setCourseArray] = useState([]);\n  const [currentValutes, setCurrentValutes] = useState([]);\n  const totalValuteCount = useMemo(() => valCourse.Valute.length, [valCourse]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortBy, setSortBy] = useState('Name');\n  const [tableHead, setTableHead] = useState([\n    { name: \"Name\", sort: true },\n    { name: \"CharCode\", sort: null },\n    { name: \"Nominal\", sort: null },\n    { name: \"Value\", sort: null },\n    { name: \"NumCode\", sort: null },\n  ]);\n\n    /* расчет количества страниц пагинации */\n    const pageCount = useMemo(\n      () =>\n        [...Array(Math.ceil(totalValuteCount / pageSize)).keys()].map(\n          (n, i) => i + 1\n        ),\n      [totalValuteCount, pageSize]\n    );\n\n\n  /* вывод постранично элементов таблицы */\n  const currentValutesMemo = useCallback(() => {\n    const calcElement = currentPage * pageSize;\n    return courseArray.slice(calcElement - pageSize, calcElement);\n  }, [currentPage, pageSize, courseArray]);\n\n  \n  /* сортировка колонок */\n  const sortColumn = (sortElementName) => {\n    const sortElement = tableHead.filter(e=>e.name === sortElementName)[0]\n    if (sortElement.sort === true) {\n      const newSort = valCourse.Valute.sort((a, b) => {\n        if (a[sortElement.name] < b[sortElement.name]) return -1;\n        if (a[sortElement.name] > b[sortElement.name]) return 1;\n        return 0;\n      });\n      setCourseArray(newSort);\n    }\n    else if (sortElement.sort === false) {\n      const newSort = valCourse.Valute.sort((a, b) => {\n        if (a[sortElement.name] > b[sortElement.name]) return -1;\n        if (a[sortElement.name] < b[sortElement.name]) return 1;\n        return 0;\n      });\n      setCourseArray(newSort);\n    }\n  };\n\n    /* обработчик начала сотрировки */\n  const handleSortTable = (sortElement) => {\n    const newTableHeadState = tableHead.map((e) => {\n      if (e.name === sortElement.name && e.sort === null) {\n        return { name: e.name, sort: true };\n      } else if (e.name === sortElement.name && e.sort) {\n        return { name: e.name, sort: false };\n      } else if (e.name === sortElement.name && !e.sort) {\n        return { name: e.name, sort: true };\n      } \n      return { name: e.name, sort: null }\n     \n    });\n    setTableHead(newTableHeadState);\n    setSortBy(sortElement.name)\n  };\n\n  useEffect(() => {\n    sortColumn(sortBy)\n    setCurrentValutes(currentValutesMemo())\n    \n  }, [tableHead, courseArray, sortBy, currentValutesMemo, valCourse ])\n\n  useEffect(() => {\n    if (valCourse.Valute.length < 10) {\n      setCurrentPage(1)\n}\n  }, [valCourse ])\n  \n\n  return (\n    <div className={\"container\"}>\n      <table className={\"courseTable\"}>\n        <thead>\n          <tr>\n            <th colSpan=\"5\">{valCourse._attributes.Date}</th>\n          </tr>\n          <tr>\n            {tableHead.map((obj, i) => (\n              <th onClick={() => handleSortTable(obj)} key={`${obj + i}`}>\n                <div className={\"tableHead__sort\"}>\n                  <span>{obj.name}</span>\n                  <span\n                    className={\n                      obj.sort\n                        ? \"arrow-up\"\n                        : obj.sort === null\n                        ? \"\"\n                        : \"arrow-down\"\n                    }\n                  ></span>\n                </div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {currentValutes.length !== 0?\n          currentValutes.map((obj) => {\n            const {\n              Name,\n              CharCode,\n              NumCode,\n              Nominal,\n              Value,\n              ID,\n            } = obj;\n            return (\n              <tr key={ID}>\n                <td>{Name}</td>\n                <td>{CharCode}</td>\n                <td>{Nominal}</td>\n                <td>{Value}</td>\n                <td>{NumCode}</td>\n              </tr>\n            );\n          }):null\n          }\n        </tbody>\n      </table>\n      {valCourse.Valute.length > pageSize ? (\n        <div className={\"pagination\"}>\n          {pageCount.map((e) => (\n            <button\n              key={Math.random()}\n              className={currentPage === e ? \"--selected\" : \"\"}\n              onClick={() => setCurrentPage(e)}\n            >\n              {e}\n            </button>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import Loader from './Loader';\n\nexport default Loader\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nexport default function Loader({type,color,width,height}) {\n  return (\n    <ReactLoading {...{type,color,width,height}} />\n  );\n}\n","import SelectInput from './SelectInput';\n\nexport default SelectInput\n","import React from 'react';\nimport Select from 'react-select';\nimport './SelectInput.css'\n\nclass SelectInput extends React.Component {\n  state = {\n    selectedOption: null,\n  };\n  \n  handleChange = selectedOption => {\n    this.setState(\n      { selectedOption }\n      );\n      this.props.selectHandler(selectedOption)\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    const {options, isMulti, closeMenuOnSelect,defaultValue,placeholder} = this.props\n    \n    return (\n      <Select\n        className={`multySelect`}\n        value={defaultValue? defaultValue :selectedOption}\n        onChange={this.handleChange}\n        options={options}\n        isMulti={isMulti}\n        closeMenuOnSelect={closeMenuOnSelect}\n        placeholder={placeholder}\n      />\n    );\n  }\n}\n\nexport default SelectInput\n","const options = {\n  title: {\n    text: \"\",\n  },\n\n  xAxis: {}\n,\n  legend: {\n    layout: \"vertical\",\n    align: \"right\",\n    verticalAlign: \"middle\",\n  },\n\n  series: [],\n\n  responsive: {\n    rules: [\n      {\n        condition: {\n          maxWidth: 1000,\n        },\n        chartOptions: {\n          legend: {\n            layout: \"horizontal\",\n            align: \"center\",\n            verticalAlign: \"bottom\",\n          },\n        },\n      },\n    ],\n  },\n  chart: {\n    height: 400,\n    width: 600\n},\n};\n\n\nexport default options\n","import Graph from './Graph';\n\nexport default Graph\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport axios from \"axios\";\nimport SelectInput from \"../SelectInput\";\nimport options from \"./optionForGraph\";\nimport \"./Graph.css\";\n\nexport default function Graph({ dataToSelectInput }) {\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [valuteData, setValuteData] = useState(\"\");\n  const [jsonDataToDownload, setJsonDataToDownload] = useState(\"\");\n  const [HighchartsReactOptions, setHighchartsReactOptions] = useState(options);\n  const today = useMemo(() => new Date().toISOString().split(\"T\")[0], [dateTo]);\n\n  useEffect(() => {\n    setValuteData(dataToSelectInput[0]);\n  }, [dataToSelectInput]);\n\n  /* запрос на сервер для графика */\n  const graphRequestHandler = async (e) => {\n    e.preventDefault();\n\n    const responce = await axios.get(\n      `/course-valute-on-period/${dateFrom}/${dateTo}/${valuteData.value}`\n    );\n    console.log(\"graphRequestHandler -> responce\", typeof responce.data);\n    const data = JSON.parse(responce.data);\n    setJsonDataToDownload(data);\n    const { dateArray, valueArray } = data;\n    console.log(\"graphRequestHandler -> ValueArray\", valueArray);\n    const { to, from } = data.periodDate;\n    const newOptions = {\n      ...HighchartsReactOptions,\n      title: {\n        text: `Динамика изменения курса, ${from} - ${to}`,\n      },\n      series: { data: valueArray, name: valuteData.label },\n      xAxis: {\n        categories: dateArray,\n      },\n    };\n    setHighchartsReactOptions(newOptions);\n  };\n\n  return (\n    <div className={\"graph\"}>\n      <div className={\"graphMenu\"}>\n        <form onSubmit={(e) => graphRequestHandler(e)}>\n          <SelectInput\n            options={dataToSelectInput}\n            isMulti={false}\n            selectHandler={(value) => setValuteData(value)}\n            closeMenuOnSelect={true}\n            defaultValue={valuteData}\n          />\n          <input\n            type=\"date\"\n            value={dateFrom}\n            min={\"2015-01-01\"}\n            max={!dateTo ? today : dateTo}\n            onChange={(e) => setDateFrom(e.target.value)}\n            required\n          />\n          <input\n            type=\"date\"\n            value={dateTo}\n            min={!dateFrom ? \"2015-01-01\" : dateFrom}\n            max={today}\n            onChange={(e) => setDateTo(e.target.value)}\n            required\n          />\n          <button type={\"submit\"}>отправить</button>\n        </form>\n\n        {jsonDataToDownload ? (\n          <button className={\"button__json\"}>\n            <a\n              href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                JSON.stringify(jsonDataToDownload)\n              )}`}\n              download={`${valuteData.label}_period_${dateFrom}_to_${dateTo}.json`}\n            >\n              {`Download Json`}\n            </a>\n          </button>\n        ) : null}\n      </div>\n      {jsonDataToDownload ? (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={HighchartsReactOptions}\n        />\n      ) : (\n        <div style={{ height: \"500px\" }}></div>\n      )}\n    </div>\n  );\n}\n","import ManualLoading from './ManualLoading'\n\nexport default ManualLoading\n","import React, { useMemo, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ManualLoading.css\";\nimport Loader from \"../Loader\";\n\nexport default function ManualLoading() {\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [dataIsLoad, setDataIsLoad] = useState(false);\n  const [dataIsLoadIng, setDataIsLoading] = useState(false);\n  const today = useMemo(() => new Date().toISOString().split(\"T\")[0], [dateTo]);\n\n  /* запрос на сервер для графика */\n  const graphRequestHandler = async (e) => {\n    e.preventDefault();\n    setDataIsLoading(true);\n    const responce = await axios.get(`/manualLoader/${dateFrom}/${dateTo}`);\n    const data = JSON.parse(responce.data);\n    if (data.result === true) {\n      setDataIsLoading(false);\n      setDataIsLoad(true);\n    }\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (dataIsLoad === true) {\n        setDataIsLoad(false);\n      }\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [dataIsLoad]);\n\n  return (\n    <div>\n      <form onSubmit={(e) => graphRequestHandler(e)}>\n        <input\n          type=\"date\"\n          value={dateFrom}\n          min={\"2015-01-01\"}\n          max={!dateTo ? today : dateTo}\n          onChange={(e) => setDateFrom(e.target.value)}\n          required\n        />\n        <input\n          type=\"date\"\n          value={dateTo}\n          min={!dateFrom ? \"2015-01-01\" : dateFrom}\n          max={today}\n          onChange={(e) => setDateTo(e.target.value)}\n          required\n        />\n        <button type={\"submit\"}>отправить</button>\n      </form>\n      {\n        <div className={\"dataisLoading\"}>\n          {dataIsLoadIng ? (\n            <Loader type={\"bars\"} color={\"grey\"} height={20} width={20} />\n          ) : dataIsLoad ? (\n            <span>{\"Данные загружены\"}</span>\n          ) : null}\n        </div>\n      }\n    </div>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Table from \"../Table\";\nimport Loader from \"../Loader\";\nimport Graph from \"../Graph\";\nimport SelectInput from \"../SelectInput\";\nimport ManualLoading from \"../ManualLoading\";\n\nfunction App() {\n  const [valCourse, setValCourse] = useState(\"\");\n  const [valCourseFilter, setValCourseFilter] = useState(\"\");\n  const [dataToSelectInput, setDataToSelectInput] = useState([]);\n  const [dateForTableFilter, setDateForTableFilter] = useState(\"\");\n  const [noDateForTable, setNoDateForTable] = useState(false);\n  const [selectDataForTableFilter, setSelectDataForTableFilter] = useState(\"\");\n  const today = useMemo(() => new Date().toISOString().split(\"T\")[0], [\n    dateForTableFilter,\n  ]);\n\n  /* фильтрация таблицы */\n  const filterTableHandler = (elements) => {\n    setSelectDataForTableFilter(elements);\n\n    if (elements === null || elements.length === 0) {\n      setValCourseFilter(\"\");\n    } else {\n      const newValCourse = valCourse.Valute.filter((element) =>\n        elements.some((chooseElements) => chooseElements.value === element.ID)\n      );\n      setValCourseFilter({ ...valCourse, Valute: newValCourse });\n    }\n  };\n\n  /* запрос на сервер */\n  const fetchData = async () => {\n    const dateNow = new Date();\n    const formatDate = dateNow.toISOString().split(\"T\")[0];\n    const responce = await axios.get(\n      `/course-valute-on-date/${\n        dateForTableFilter ? dateForTableFilter : formatDate\n      }`\n    );\n    const data = JSON.parse(responce.data);\n    if (data.result === false) {\n      setNoDateForTable(true)\n    }else{\n      const nameList = data.ValCurs.Valute.map((e) => {\n        return { value: e.ID, label: e.Name };\n      });\n      setNoDateForTable(false)\n      setValCourse(data.ValCurs);\n      setDataToSelectInput(nameList);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  /* изменяет данные фильтрованной таблицы */\n  useEffect(() => {\n    filterTableHandler(selectDataForTableFilter);\n  }, [valCourse]);\n\n  return (\n    <div className=\"App\">\n      <h1>Ручная загрузка</h1>\n      <ManualLoading />\n\n      <h1>Курсы валют</h1>\n      <div>\n        <input\n          type=\"date\"\n          value={dateForTableFilter}\n          onChange={(e) => setDateForTableFilter(e.target.value)}\n          min={\"2015-01-01\"}\n          max={today}\n        />\n        <button onClick={fetchData}>отправить</button>\n\n        {noDateForTable ? <span>{\"На этот день нет данных\"}</span> : null}\n\n        <SelectInput\n          options={dataToSelectInput}\n          isMulti={true}\n          selectHandler={filterTableHandler}\n          closeMenuOnSelect={false}\n          placeholder={\"Filter...\"}\n        />\n      </div>\n      <div className={\"App__table\"}>\n        {valCourse.Valute ? (\n          <Table valCourse={valCourseFilter ? valCourseFilter : valCourse} />\n        ) : (\n          <Loader type={\"bars\"} color={\"grey\"} height={667} width={375} />\n        )}\n      </div>\n      <div>\n        <h1>График</h1>\n      </div>\n      <Graph {...{ dataToSelectInput }} />\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}